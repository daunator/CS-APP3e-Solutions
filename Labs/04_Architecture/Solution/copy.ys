# Execution begins at address 0 
		.pos 0
		irmovq stack, %rsp  	# Set up stack pointer
		call main		# Execute main program
		halt			# Terminate program 

.align 8
# Source block
src:		.quad 0x00a
		.quad 0x0b0
		.quad 0xc00
# Destination
dest:		.quad 0x111
		.quad 0x222
		.quad 0x333

main:		irmovq src, %rdi
		irmovq dest, %rsi
		irmovq $3, %rdx
		call copy_block		# copy_block(src, dest, 3)
		ret

# long copy_block(long *src, long *dest, long len)
# src in %rdi, dest in %sdi, len in rdx
copy_block:	irmovq	$1, %r11
		irmovq	$8, %r12
		xorq	%rax, %rax
		jmp	test
loop:		mrmovq	$0(%rdi), %rcx
		rmmovq	%rcx, $0(%rsi)
        	xorq	%rcx, %rax
        	subq	%r11, %rdx
		addq	%r12, %rsi
		addq	%r12, %rdi
test:		andq	%rdx, %rdx
        	jg	loop
        	ret

# Stack starts here and grows to lower addresses
		.pos 0x200
stack:
